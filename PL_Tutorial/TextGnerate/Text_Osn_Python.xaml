<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- ДОКУМЕНТАЦИЯ
    
    ЦВЕТА БОРДЕРОВ: 
    1. Зеленый - для объяснения каких либо функций
    2. Желтый - обозначения, примечания или перечесление каких то аспектов языка
    3. Красный - пример использования
    
    
    ОФОРМЛЕНИЕ ТЕКСТА:
    1. заголовок не писать, он уже написан в верхней части окна
    2. каждую подтему делать заголовком, выровненным по центру. Размер заголовка - 35. Простой текст - 18
    3. перечисления помечать кружочком = " ● "
    4. пример кода пишется иммитируя строки, как в IDE, а каждая новая строка помечается знаком равняющимся его индексом - [1...+n]
    5. примечания, примеры, части для привлечения внимания - помечать жирным выделением
    6. стиль для текста и для TextRichBox уже написан, использовать их!
    7. &lt; = знак меньше <
    8. &gt; = знак больше >

    
    ОФОРМЛЕНИЕ КОДА:
    1. каждая подтема заключается в <Section>
    2. пример рамок для заключения ВАЖНЫХ частей:
        <BlockUIContainer>
            <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="200" HorizontalAlignment="Left" CornerRadius="10">
                <TextBlock>
                    [1] print(2 + 3)
                    <LineBreak/>
                    [2] print("Hello")
                </TextBlock>
            </Border>
        </BlockUIContainer>
    
    3. пример написания для обозначения, что находится в рамке:
        <LineBreak/>
        <LineBreak/>
        <Span FontSize="20">
            <Bold>Пример:</Bold> 
        </Span> 
    
    4. комментарием помечать, когда начинается новая ТЕМА - данный комментарий идет в ВЕРХНЕМ РЕГИСТРЕ
    5. комментарием помечать, когда начинается новая подтема - данный комментарий идет в НИЖНЕМ РЕГИСТРЕ
    
    
    
    
    
    
    
    
    ДОРАБОТКА СТАНДАРТА ОФОРМЛЕНИЯ БУДЕТ ДОРАБАТЫВАТЬСЯ СО ВРЕМЕНЕМ
    
    -->
    
    
    
    <!--ТЕКСТ СИНТАКСИСА-->
    <Style TargetType="{x:Type RichTextBox}" x:Key="SintaxRichTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RichTextBox">
                    <RichTextBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                 Foreground="AliceBlue"
                                 Background="Transparent"
                                 FontSize="18"
                                 BorderThickness="0"
                                 IsReadOnly="True">
                        <FlowDocument>
                            <!--написание прог-->
                            <Section>
                                <Paragraph>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            _____________________
                                        </Span> 
                                        Написание программы
                                    </Span>
                                </Paragraph>
                                
                                <Paragraph>
                                    Программа на языке Python состоит из набора инструкций. Каждая инструкция помещается на новую строку.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold> 
                                    </Span> 
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="200" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] print(2 + 3)
                                            <LineBreak/>
                                            [2] print("Hello")
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    <LineBreak/>
                                    Большую роль в Python играют отступы. Неправильно поставленный отступ фактически является ошибкой. 
                                    Например, в следующем случае мы получим ошибку, хотя код будет практически аналогичен приведенному выше:
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="200" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] print(2 + 3) 
                                            <LineBreak/>
                                            [2] ____print("Hello")
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    <LineBreak/>
                                    Однако стоит учитывать, что некоторые конструкции языка могут состоять из нескольких строк. Например, условная конструкция if:
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="200" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] if 1 &gt; 2:
                                            <LineBreak/>
                                            [2] ____print("Hello")
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    В данном случае если 1 меньше 2, то выводится строка "Hello". 
                                    И здесь уже должен быть отступ, так как инструкция print("Hello") 
                                    используется не сама по себе, а как часть условной конструкции if. Согласно PEP8
                                    отступ состоит из: <Bold>4 пробелов.</Bold>
                                    <LineBreak/>
                                    <LineBreak/>
                                </Paragraph>

                            </Section>
                            
                            
                            <!--Регистр-->
                            <Section>
                                <Paragraph>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            _____________________
                                        </Span>
                                        Регистрозависимость
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    Python - регистрозависимый язык, поэтому выражения print и Print или PRINT представляют разные выражения.
                                    И если вместо метода print для вывода на консоль мы попробуем использовать метод PRINT, то будет ошибка:
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="200" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] PRINT("Hello")
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    <LineBreak/>
                                    Посмотри на данный пример, первые буквы имени перменной, находятся в разных регистрах, следует
                                    - это разные переменные
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="250" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] nameColor = "Color"
                                            <LineBreak/>
                                            [2] NameColor = "Color"
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>
                            
                            <!--Комментарии-->
                            <Section>
                                <Paragraph>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            _________________________
                                        </Span>
                                        Комментарии
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    Для отметки, что делает тот или иной участок кода, применяются комментарии. При трансляции и 
                                    выполнении программы интерпретатор игнорирует комментарии, поэтому они не оказывают никакого влияния на работу программы. 
                                    Комментарии в Python бывают блочные и строчные.
                                    <LineBreak/>
                                    <LineBreak/>
                                    Строчные коментарии предваряются знаком решетки - #. 
                                    Они могут располагаться на отдельной строке или на одной
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="450" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] # это комментарий на отдельной строке
                                            <LineBreak/>
                                            [2] print("Hello") # а этот коммент на одной строке
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    <LineBreak/>
                                    В блочных коментариях до и после текста комментария ставятся три одинарные кавычки: 
                                    '''текст комментария'''.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>
                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="450" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] '''
                                            <LineBreak/>
                                            [2] это комментарий на БЛОЧНЫЙ
                                            <LineBreak/>
                                            [3] он удобен для больших записей
                                            <LineBreak/>
                                            [4] '''
                                            <LineBreak/>
                                            [5] print('Hey')
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>
                        </FlowDocument>
                    </RichTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    
    

    <!--ТЕКСТ ПЕРЕМЕННЫЕ-->
    <Style TargetType="{x:Type RichTextBox}" x:Key="PeremenRichTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RichTextBox">
                    <RichTextBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                 Foreground="AliceBlue"
                                 Background="Transparent"
                                 FontSize="18"
                                 BorderThickness="0"
                                 IsReadOnly="True">
                        <FlowDocument>
                            <!--написание о переменных-->
                            <Section>
                                <Paragraph>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            _______________________
                                        </Span>
                                        О переменных
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    Переменные предназначены для хранения данных. Название переменной в Python должно начинаться с алфавитного символа или со знака 
                                    подчеркивания и может содержать алфавитно-цифровые символы и знак подчеркивания. И кроме того, название переменной не должно 
                                    совпадать с названием ключевых слов языка Python.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Ключевые слова:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Yellow" BorderThickness="2" Padding="5" Width="320" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] False   |   await   |   else   |   import   |   pass
                                            <LineBreak/>
                                            [2] None    |   break   |   except   |   in    |    raise
                                            <LineBreak/>
                                            [3] True    |   class    |    finally   |   is    |    return
                                            <LineBreak/>
                                            [4] and    |    continue  |  for    |    lambda   |   try
                                            <LineBreak/>
                                            [5] as     |    def    |     from    |    nonlocal   |   while
                                            <LineBreak/>
                                            [6] assert    |    del    |    global    |    not    |    with
                                            <LineBreak/>
                                            [7] async   |   elif   |    if    |     or     |    yield  
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    <LineBreak/>
                                    Создадим переменную "<Bold>name</Bold>", которая будет хранить в себе значение "<Bold>Python</Bold>":
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Green" BorderThickness="2" Padding="5" Width="220" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] name = "Python"
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>

                            
                            <!--Типы наименований переменных-->
                            <Section>
                                <Paragraph>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            ______________
                                        </Span>
                                        Типы наименования переменных
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    В пайтоне применяется два типа наименования переменных:
                                    <Bold>CamelCase</Bold> и
                                    <Bold>UnderscoreNotation</Bold> .
                                    <LineBreak/>
                                    <Bold>CamelCase</Bold> подразумевает, что каждое новое подслово в наименовании переменной начинается 
                                    с большой буквы.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="240" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] nameLang = "Python"
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    <LineBreak/>
                                    <Bold>UnderscoreNotation</Bold> подразумевает, что подслова в наименовании переменной разделяются знаком подчеркивания.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="240" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] name_lang = "Scala"
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    <LineBreak/>
                                    После инициализации перменной, мы с ней можем работать по разному. Проводить мат-операции, выводить, изменять
                                    переприсваивать и многое другое.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="780" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] # ВЫВЕДЕТ НА КОНСОЛЬ: Scala - мультипарадигмальный язык программирования
                                            <LineBreak/>
                                            [2] name_lang = "Scala"
                                            <LineBreak/>
                                            [3] print(f"{name_lang} - мультипарадигмальный язык программирования")
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    <LineBreak/>
                                    Так же мы можем менять значения переменных.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="380" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] nameLang = "Scala" 
                                            <LineBreak/>
                                            [2] print(nameLang) # ВЫВЕДЕТ: Scala
                                            <LineBreak/>
                                            [3] nameLang = 'Python'
                                            <LineBreak/>
                                            [4] print(name_lang) # ВЫВЕДЕТ: Python
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>
                        </FlowDocument>
                    </RichTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <!--ТЕКСТ ТИПЫ ДАННЫХ-->
    <Style TargetType="{x:Type RichTextBox}" x:Key="TypeDateRichTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RichTextBox">
                    <RichTextBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                 Foreground="AliceBlue"
                                 Background="Transparent"
                                 FontSize="18"
                                 BorderThickness="0"
                                 IsReadOnly="True">
                        <FlowDocument>
                            <Section>
                                <Paragraph>
                                    В Python есть несколько встроенных типов данных, которые используются для хранения и манипулирования значениями.
                                    Основные из них будут показаны снизу.
                                </Paragraph>
                            </Section>


                            <!--написание Числа-->
                            <Section>
                                <Paragraph>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            ____________________________
                                        </Span>
                                        Числа
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    <Bold>● Целые числа (int):</Bold> Представляют целые числа, например, 1, 100, -10 и т. д. В Python нет ограничений на размер целых чисел.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="480" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] num = 32 # целое число - не отрицательное
                                            <LineBreak/>
                                            [2] num2 = -12 # целое число - отрицательное
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                                
                                <Paragraph>
                                    <LineBreak/>
                                    <Bold>● Вещественные числа (float):</Bold> Представляют числа с плавающей точкой, такие как 3.14, 2.71828 и т. д. Они могут содержать десятичные значения и научную нотацию (например, 6.02e23).
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="400" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] numFloat = 3.42 # вещественное число
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    <LineBreak/>
                                    <Bold>● Комплексные числа (complex):</Bold> Представляются в виде a + bj, где a и b - вещественные числа, а j - мнимая единица.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="400" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] numComplex = 3 + 2j # коплексное число
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>

                            
                            <!--написание Cтрок-->

                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            ____________________________
                                        </Span>
                                        Строки
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    ● Строки представляют последовательность символов и используются для хранения текстовой информации. 
                                    Строки в Python могут быть заключены в одинарные (' ') или двойные кавычки (" ").
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="300" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] str = "Hello World" # строка
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>


                            <!--написание Boolean-->

                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            ____________________________
                                        </Span>
                                        Boolean
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    ● Булев тип представляет два возможных значения: <Bold>True (истина)</Bold> и <Bold>False (ложь)</Bold>. 
                                    Он используется для выполнения логических операций и проверок условий.

                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="300" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] elTr = True # True
                                            <LineBreak/>
                                            [2] elFl = False # False
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>


                            <!--написание List-->

                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            __________________________
                                        </Span>
                                        Список (list)
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    ● Списки представляют упорядоченные коллекции элементов, которые могут быть разных типов. 
                                    Они могут содержать любое количество элементов и изменяться (мутабельны).
                                    И заключаются в квадратные скобки.

                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="400" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] l = [1, 3, 9, 43, 6] # список int
                                            <LineBreak/>
                                            [2] l1 = ['a', 'b', 'c'] # список string
                                            <LineBreak/>
                                            [3] l2 = [1, 4, 5, [99, 0, 20], 3] # список-списка
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>

                            

                            <!--написание Tuple-->

                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            ________________________
                                        </Span>
                                        Кортеж (tuple)
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    ● Кортежи похожи на списки, но неизменяемы (immutable), то есть их элементы не могут быть изменены после создания.
                                    И заключаются в круглые скобки.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="850" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] tup = (1, 3, 9, 43, 6) # кортеж int
                                            <LineBreak/>
                                            [2] tup1 = ('a', 3, 5, 'c') # кортеж со смешенными значениями
                                            <LineBreak/>
                                            # обрати внимание на запятую, если ее не поставить, то кортеж из одного элемента не создастся
                                            <LineBreak/>
                                            [3] tup2 = (3,) # кортеж из одного лемента
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>


                            <!--написание Set-->

                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            ________________________
                                        </Span>
                                        Множества (set)
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    ● Множества представляют уникальные и неупорядоченные коллекции элементов. 
                                    Они поддерживают операции над множествами, такие как объединение, пересечение и разность.
                                    И заключаются в фигурные скобки.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="600" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] set1 = {1, 2, 3, 4, 5} # множество int
                                            <LineBreak/>
                                            [2] set_of_strings = {"apple", "banana", "orange"} # множество string
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>


                            <!--написание Dict-->

                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            ________________________
                                        </Span>
                                        Словарь (dict)
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    ● Словари представляют отображения ключей на значения. 
                                    Они используются для хранения данных в виде пар "ключ-значение".
                                    Ключи должны быть уникальными в пределах словаря.
                                    И заключаются в фигурные скобки. Но отличаются от множеств тем, что у словаря есть "КЛЮЧ" и "ЗНАЧЕНИЕ".
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="600" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] student = {"name": "John", "age": 20, "grade": "A"} # словарь
                                            <LineBreak/>
                                            [2] print(student)  # Вывод: {'name': 'John', 'age': 20, 'grade': 'A'}
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>
                            
                            
                            <!--написани Type-->
                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            ________________________
                                        </Span>
                                        Функция - type
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    С помощью встроенной функции type() динамически можно узнать текущий тип переменной:
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="600" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] userId = "abc" # тип str
                                            <LineBreak/>
                                            [2] print(type(userId)) #  выведет - class'str'
                                            <LineBreak/>
                                            <LineBreak/>
                                            [3] userId = 43 # тип int
                                            <LineBreak/>
                                            [4] print(type(userId)) #  выведет - class'int'

                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>
                            </FlowDocument>
                    </RichTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--ТЕКСТ ТИПЫ ДАННЫХ-->
    <Style TargetType="{x:Type RichTextBox}" x:Key="ConsoleInOutRichTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RichTextBox">
                    <RichTextBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                 Foreground="AliceBlue"
                                 Background="Transparent"
                                 FontSize="18"
                                 BorderThickness="0"
                                 IsReadOnly="True">
                        <FlowDocument>
                            <!--написание Ввод-->
                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            ______________________
                                        </Span>
                                        Вывод на консоль
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    Для вывода информации на консоль предназначена встроенная функция print(). 
                                    При вызове этой функции ей в скобках передается выводимое значение.
                                    А так же стоит учитовать, что по умолчанию эта функция выводит текст с новой строки.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="400" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] print('Hey Python') # выведет - Hey Python
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    <LineBreak/>
                                    Для этого нам надо настроить поведение функции с помощью параметра end. 
                                    Этот параметр задает символы, которые добавляются в конце к выводимой строке или просто пустоту.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Конструкция "end":</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Yellow" BorderThickness="2" Padding="5" Width="450" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] print('значения', end="конечный_символ")
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    <LineBreak/>
                                    Сделаем так, чтобы функция print, не выводила на текст с новой строки, а печатала все на одной.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="450" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] print('Hey', end=" ")
                                            <LineBreak/>
                                            [2] print('Python', end=" ")
                                            [3] print('!')
                                            <LineBreak/>
                                            [4] # вывод получится - Hey Python!
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    <LineBreak/>
                                    Или это может быть набор символов.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="450" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] print('Hey', end=" [S] ")
                                            <LineBreak/>
                                            [2] print('Python', end=" [S] ")
                                            [3] print('!')
                                            <LineBreak/>
                                            [4] # вывод получится - Hey [S] Python [S] !
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>


                            <!--написание Работа с текстом-->
                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            _______________________
                                        </Span>
                                        Работа с текстом
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    Если вы хотите вывести большой кусок текста, или занести его в перменную, не мучаясь с переносами.
                                    То лучше использовать конструкцию тройных кавычек - ''' '''.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="450" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] print('''aaaaaaaa
                                            <LineBreak/>
                                            [2] bbbbbbb
                                            <LineBreak/>
                                            [3] ccccccccc''')
                                            <LineBreak/>
                                            <LineBreak/>
                                            # ВЫВОД ПОЛУЧИТСЯ СЛЕДУЮЩИЙ:
                                            <LineBreak/>
                                            aaaaaaaa
                                            <LineBreak/>
                                            bbbbbbb
                                            <LineBreak/>
                                            ccccccccc
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    <LineBreak/>
                                    Так же такие текста можно заносить в переменную.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="450" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] looongStr = '''aaaaaaaa
                                            <LineBreak/>
                                            [2] bbbbbbb
                                            <LineBreak/>
                                            [3] ccccccccc'''
                                            <LineBreak/>
                                            [4] print(looongStr)
                                            <LineBreak/>
                                            <LineBreak/>
                                            # ВЫВОД ПОЛУЧИТСЯ СЛЕДУЮЩИЙ:
                                            <LineBreak/>
                                            aaaaaaaa
                                            <LineBreak/>
                                            bbbbbbb
                                            <LineBreak/>
                                            ccccccccc
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>


                            <!--написание Управле послед-->
                            <Section>
                                <Paragraph>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            _______________________
                                        </Span>
                                        Работа с текстом
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    Строка может содержать ряд специальных символов - управляющих последовательностей. Приведу основные.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Спец-символы - управляющей последовательности:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Yellow" BorderThickness="2" Padding="5" Width="950" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            \n - символ новой строки. Используется для перехода на новую строку.
                                            <LineBreak/>
                                            \t - символ горизонтальной табуляции. Используется для создания отступа или добавления табуляции.
                                            <LineBreak/>
                                            \" - двойная кавычка. Используется для включения символа двойной кавычки внутри строки,<LineBreak/> ограниченной двойными кавычками.
                                            <LineBreak/>
                                            \' - одинарная кавычка. Используется для включения символа одинарной кавычки внутри строки, <LineBreak/>ограниченной одинарными кавычками.
                                            <LineBreak/>
                                            \\ - обратная косая черта. Используется для включения символа обратной косой черты в строку.
                                            <LineBreak/>
                                            \r - символ возврата каретки. Используется для возврата каретки в начало строки.
                                            <LineBreak/>
                                            \b - символ возврата на одну позицию назад (backspace). Используется для удаления последнего символа.
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="350" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] text = "Message:\n\"Hello World\""
                                            <LineBreak/>
                                            [2] print(text)
                                            <LineBreak/>
                                            <LineBreak/>
                                            # ВЫВОД БУДЕТ СЛЕДУЮЩИЙ
                                            <LineBreak/>
                                            Message:
                                            <LineBreak/>
                                            "Hello World"
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>


                            
                            <!--написание F-строка-->
                            <Section>
                                <Paragraph>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            ___________________________
                                        </Span>
                                        F-строка
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    Python позволяет встравивать в строку значения других переменных. 
                                    Для этого внутри строки переменные размещаются в фигурных скобках {}, 
                                    а перед всей строкой ставится символ f.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="450" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] userName = "Tom"
                                            <LineBreak/>
                                            [2] userAge = 37
                                            <LineBreak/>
                                            [3] user = f"name: {userName}  age: {userAge}"
                                            <LineBreak/>
                                            [4] print(user)   # name: Tom  age: 37
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    F-строка, очень полезна и удобна, когда вам надо работать много с текстом
                                </Paragraph>
                            </Section>


                            <!--написание Ввод-->
                            <Section>
                                <Paragraph>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            _______________________
                                        </Span>
                                        Консольный ввод
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    Наряду с выводом на консоль мы можем получать ввод пользователя с консоли, получать вводимые данные. 
                                    Для этого в Python определена функция input(). В эту функцию передается приглашение к вводу. 
                                    А результат ввода мы можем сохранить в переменную. Например, определим код для ввода пользователем имени.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="900" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] name = input("Введите свое имя: ")
                                            <LineBreak/>
                                            [2] print(f"Ваше имя: {name}")
                                            <LineBreak/>
                                            <LineBreak/>
                                            # ВЫВОД БУДЕТ СЛЕДУЮЩИЙ
                                            <LineBreak/>
                                            Введите свое имя: Alex <Span Foreground="#272537">_____</Span> # тут питон запрашивает у человека, чтобы он ввел на консоль свое имя
                                            <LineBreak/>
                                            Ваше имя: Alex <Span Foreground="#272537">_____</Span> # тут наш вывод текста, с нашим именем


                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>
                        </FlowDocument>
                    </RichTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    


    <!--АРИФМЕТИЧЕСКИЕ ОПЕРАЦИИ-->
    <Style TargetType="{x:Type RichTextBox}" x:Key="ArifmRichTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RichTextBox">
                    <RichTextBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                 Foreground="AliceBlue"
                                 Background="Transparent"
                                 FontSize="18"
                                 BorderThickness="0"
                                 IsReadOnly="True">
                        <FlowDocument>
                            <!--написание Ввод-->
                            <Section>
                                <Paragraph>
                                    Python поддерживаются все арифметические операции. Рассмотрим все операции.
                                </Paragraph>
                            </Section>

                            <!--написание Арифм операции-->
                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            __________________
                                        </Span>
                                        Арифметические операции
                                    </Span>
                                </Paragraph>

                                <Paragraph FontSize="20">
                                    ● <Bold>Сложение</Bold>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Green" BorderThickness="2" Padding="5" Width="350" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] print(1 + 1) <Span Foreground="#272537">___</Span> # 2
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph FontSize="20">
                                    <LineBreak/>
                                    ● <Bold>Вычитание</Bold>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Green" BorderThickness="2" Padding="5" Width="350" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] print(5 - 1) <Span Foreground="#272537">___</Span> # 4
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph FontSize="20">
                                    <LineBreak/>
                                    ● <Bold>Умножение</Bold>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Green" BorderThickness="2" Padding="5" Width="350" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] print(5 * 3) <Span Foreground="#272537">___</Span> # 15
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph FontSize="20">
                                    <LineBreak/>
                                    ● <Bold>Деление</Bold>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Green" BorderThickness="2" Padding="5" Width="350" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] print(6 / 2) <Span Foreground="#272537">___</Span> # 3.0
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph FontSize="20">
                                    <LineBreak/>
                                    ● <Bold>Целочисленное деление</Bold>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Green" BorderThickness="2" Padding="5" Width="350" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] print(6 // 2) <Span Foreground="#272537">___</Span> # 3
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph FontSize="20">
                                    <LineBreak/>
                                    ● <Bold>Возведение в степень</Bold>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Green" BorderThickness="2" Padding="5" Width="350" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] print(6 ** 2) <Span Foreground="#272537">___</Span> # 36
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph FontSize="20">
                                    <LineBreak/>
                                    ● <Bold>Получение остатка от деления</Bold>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Green" BorderThickness="2" Padding="5" Width="350" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] print(7 % 2) <Span Foreground="#272537">___</Span> # остаток от деления 7 на 2 = 1
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>


                            <!--написание Арифметические операции с присвоением-->
                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            __________
                                        </Span>
                                        Арифметические операции с присвоением
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    Ряд специальных операций позволяют использовать присвоить результат операции первому операнду.
                                </Paragraph>

                                <Paragraph FontSize="20">
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Примеры операций:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Yellow" BorderThickness="2" Padding="5" Width="550" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            ● <Bold>+= Присвоение результата сложения</Bold>
                                            <LineBreak/>
                                            ● <Bold>-= Присвоение результата вычитания</Bold>
                                            <LineBreak/>
                                            ● <Bold>/= Присвоение результата от деления</Bold>
                                            <LineBreak/>
                                            ● <Bold>//= Присвоение результата целочисленного деления</Bold>
                                            <LineBreak/>
                                            ● <Bold>**= Присвоение степени числа</Bold>
                                            <LineBreak/>
                                            ● <Bold>%= Присвоение остатка от деления</Bold>
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph FontSize="20">
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Примеры:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="350" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] number = 10
                                            <LineBreak/>
                                            [2] number += 5
                                            <LineBreak/>
                                            [3] print(number) <Span Foreground="#272537">___</Span> # 15
                                            <LineBreak/>
                                            [4]
                                            <LineBreak/>
                                            [5] number -= 3
                                            <LineBreak/>
                                            [6] print(number) <Span Foreground="#272537">___</Span> # 12
                                            <LineBreak/>
                                            [7]
                                            <LineBreak/>
                                            [8] number *= 4
                                            <LineBreak/>
                                            [9] print(number) <Span Foreground="#272537">___</Span> # 48
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>
                            </Section>
                        </FlowDocument>
                    </RichTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






    <!--ПРЕОБРАЗОВАНИЕ ТИПОВ ОПЕРАЦИИ-->
    <Style TargetType="{x:Type RichTextBox}" x:Key="ConvertTypeRichTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RichTextBox">
                    <RichTextBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                 Foreground="AliceBlue"
                                 Background="Transparent"
                                 FontSize="18"
                                 BorderThickness="0"
                                 IsReadOnly="True">
                        <FlowDocument>
                            <!--написание Целое число-->
                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            ______________
                                        </Span>
                                        Преобразование в целое число
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    ● Используйте функцию int() для преобразования числа с плавающей точкой или строки в целое число.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Примеры:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="600" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] x = int(3.14) <Span Foreground="#272537">___</Span> # преобразуется в просто целую цифру: 3
                                            <LineBreak/>
                                            [2] y = int("42") <Span Foreground="#272537">___</Span> # строка преобразуется в просто целое число: 42
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                            </Section>


                            <!--написание Дробное число-->
                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            _______
                                        </Span>
                                        Преобразование в число с плавающей точкой
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    ● Используйте функцию float() для преобразования целого числа или строки в число с плавающей точкой.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Примеры:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="700" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] x = float(42) <Span Foreground="#272537">___</Span> # преобразуется в число с плавающей точкой: 42.0
                                            <LineBreak/>
                                            [2] y = float("3.14") <Span Foreground="#272537">___</Span> # строка преобразуется в число с плавающей точкой: 3.14
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                            </Section>



                            <!--написание Преобразование в строку-->
                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            ___________________
                                        </Span>
                                        Преобразование в строку
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    ● Используйте функцию str() для преобразования числа или другого объекта в строку.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Примеры:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="600" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] x = str(42) <Span Foreground="#272537">___</Span> # число преобразуется в строку: "42"
                                            <LineBreak/>
                                            [2] y = str(3.14) <Span Foreground="#272537">___</Span> # число преобразуется в строку: 3.14
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                            </Section>




                            <!--написание Логическое значение-->
                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            ___________
                                        </Span>
                                        Преобразование в логическое значение
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    ● Используйте функцию bool() для преобразования значения в логическое (булево) значение. 
                                    Пустые значения, ноль и пустая строка преобразуются в False, а любые другие значения преобразуются в True.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Примеры:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="600" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] x = bool(42) <Span Foreground="#272537">___</Span> # булевое значение будет равно: True
                                            <LineBreak/>
                                            [2] y = bool("") <Span Foreground="#272537">___</Span> # булевое значение будет равно: False
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                            </Section>





                            <!--написание Cписок, кортеж или множество-->
                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                           ___
                                        </Span>
                                        Преобразование в список, кортеж или множество
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    ● Используйте функции list(), tuple() или set() соответственно для 
                                    преобразования итерируемого объекта в список, кортеж или множество.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Примеры:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="700" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] x = list("hey") <Span Foreground="#272537">___</Span> # преобразует строку в посимвольный список: ['h', 'e', 'y']
                                            <LineBreak/>
                                            [2] y = tuple([1, 2, 3]) <Span Foreground="#272537">___</Span> # преобразует список в кортеж: (1, 2, 3)
                                            <LineBreak/>
                                            [3] z = set([1, 2, 3]) <Span Foreground="#272537">___</Span> # преобразует список в множество: {1, 2, 3}
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                            </Section>

                        </FlowDocument>
                    </RichTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <!--ПРЕОБРАЗОВАНИЕ УСЛОВНЫЕ ВЫРАЖЕНИЕ-->
    <Style TargetType="{x:Type RichTextBox}" x:Key="UslovnVirazRichTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RichTextBox">
                    <RichTextBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                 Foreground="AliceBlue"
                                 Background="Transparent"
                                 FontSize="18"
                                 BorderThickness="0"
                                 IsReadOnly="True">
                        <FlowDocument>
                            <Section>
                                <Paragraph>
                                    - Ряд операций представляют условные выражения. Все эти операции принимают два операнда и возвращают логическое значение,
                                    которое в Python представляет тип bool. Существует только два логических значения - True (выражение истинно) и False (выражение ложно).
                                </Paragraph>
                            </Section>
                            
                            <!--написание Операции сравнения-->
                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            ___________________
                                        </Span>
                                        Операции сравнения
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    Простейшие условные выражения представляют операции сравнения, которые сравнивают два значения.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Python поддерживает следующие операции сравнения:</Bold>
                                    </Span>
                                </Paragraph>

                                <BlockUIContainer>
                                    <Border BorderBrush="Yellow" BorderThickness="2" Padding="5" Width="700" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            ● ==
                                            <LineBreak/>
                                            Возвращает True, если оба операнда равны. Иначе возвращает False.
                                            <LineBreak/>
                                            ● !=
                                            <LineBreak/>
                                            Возвращает True, если оба операнда НЕ равны. Иначе возвращает False.
                                            <LineBreak/>
                                            ● &gt; (больше чем)
                                            <LineBreak/>
                                            Возвращает True, если первый операнд больше второго.
                                            <LineBreak/>
                                            ● &lt; (меньше чем)
                                            <LineBreak/>
                                            Возвращает True, если первый операнд меньше второго.
                                            <LineBreak/>
                                            ● &gt;= (больше или равно)
                                            <LineBreak/>
                                            Возвращает True, если первый операнд больше или равен второму.
                                            <LineBreak/>
                                            ● &lt;= (меньше или равно)
                                            <LineBreak/>
                                            Возвращает True, если первый операнд меньше или равен второму.
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                </Paragraph>
                                
                                <BlockUIContainer>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="600" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] a = 5
                                            <LineBreak/>
                                            [2] b = 6
                                            <LineBreak/>
                                            [3] result = 5 == 6 <Span Foreground="#272537">___</Span> # сохраняем результат операции в переменную
                                            <LineBreak/>
                                            [4] print(result) <Span Foreground="#272537">___</Span> # False - 5 не равно 6
                                            <LineBreak/>
                                            [5] print(a != b) <Span Foreground="#272537">___</Span> # True
                                            <LineBreak/>
                                            [6] print(a &gt; b) <Span Foreground="#272537">___</Span> # False - 5 меньше 6
                                            <LineBreak/>
                                            [7] print(a &lt; b) <Span Foreground="#272537">___</Span> # True
                                            <LineBreak/>
                                            [8] bool1 = True
                                            <LineBreak/>
                                            [9] bool2 = False
                                            <LineBreak/>
                                            [10] print(bool1 == bool2) <Span Foreground="#272537">___</Span> # False - bool1 не равно bool2
                                        </TextBlock>
                                    </Border>
                                </BlockUIContainer>

                                <Paragraph>
                                    Операции сравнения могут сравнивать различные объекты - строки, числа, логические значения, однако оба операнда операции должны представлять один и тот же тип.
                                    <LineBreak/>
                                    <LineBreak/>
                                    Для создания составных условных выражений применяются логические операции.
                                    <LineBreak/>
                                    <LineBreak/>
                                </Paragraph>
                            </Section>



                            

                            <!--написание Логические операции AND-->
                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            _____________________
                                        </Span>
                                        Логические операции
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    <Span FontSize="30" FontWeight="Bold">● Оператор "and"</Span>
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Border BorderBrush="Green" BorderThickness="2" Padding="5" Width="150" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] x and y 
                                        </TextBlock>
                                    </Border>
                                    <LineBreak/>
                                    Сначала оператор and оценивает выражение x, и если оно равно False, 
                                    то возвращается его значение. Если оно равно True, то оценивается второй операнд - y и возвращается значение y.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                    
                                    <LineBreak/>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="350" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] age = 22
                                            <LineBreak/>
                                            [2] weight = 58
                                            <LineBreak/>
                                            [3] result = age > 21 and weight == 58
                                            <LineBreak/>
                                            [4] print(result) <Span Foreground="#272537">___</Span> # True
                                        </TextBlock>
                                    </Border>
                                    <LineBreak/>
                                    В данном случае оператор and сравнивает результаты двух выражений: age > 21 weight == 58. 
                                    И если оба этих выражений возвращают True, то оператор and также возвращает True (формально возвращается значение последнего операнда).
                                    <LineBreak/>
                                    <LineBreak/>
                                    
                                    Но операндами оператора and необязательно выступают значения True и False. Это могут быть любые значения.
                                    
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>
                                    
                                    <LineBreak/>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="950" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] result = 4 and "w"
                                            <LineBreak/>
                                            [2] print(result) <Span Foreground="#272537">___</Span> # w, так как 4 равно True, поэтому возвращается значение последнего операнда
                                            <LineBreak/>
                                            [3] 
                                            <LineBreak/>
                                            [4] result = 0 and "w"
                                            <LineBreak/>
                                            [5] print(result) <Span Foreground="#272537">___</Span> # 0, так как 0 эквивалентно False
                                        </TextBlock>
                                    </Border>
                                    <LineBreak/>
                                    В данном случае число 0 и пустая строка "" расматриваются как False, все остальные числа и непустые строки эквивалентны True
                                </Paragraph>
                            </Section>



                            <!--написание Логические операции OR-->
                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="30" FontWeight="Bold">● Оператор "or"</Span>
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Border BorderBrush="Green" BorderThickness="2" Padding="5" Width="150" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] x or y
                                        </TextBlock>
                                    </Border>
                                    <LineBreak/>
                                    Сначала оператор or оценивает выражение x, и если оно равно True, то возвращается его значение. 
                                    Если оно равно False, то оценивается второй операнд - y и возвращается значение y.

                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>

                                    <LineBreak/>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="650" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] age = 22
                                            <LineBreak/>
                                            [2] weight = 58
                                            <LineBreak/>
                                            [3] result = age &lt; 21 or weight == 58
                                            <LineBreak/>
                                            [4] print(result) <Span Foreground="#272537">___</Span> # True, так как выражение weight == 58 равно True
                                        </TextBlock>
                                    </Border>
                                    <LineBreak/>

                                </Paragraph>
                            </Section>



                            <!--написание Логические операции NOT-->
                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="30" FontWeight="Bold">● Оператор "not"</Span>
                                    <LineBreak/>
                                    not - логическое отрицание

                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>

                                    <LineBreak/>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="350" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] age = 22
                                            <LineBreak/>
                                            [2] weight = 58
                                            <LineBreak/>
                                            [3] print(not age > 21) <Span Foreground="#272537">___</Span> # False
                                            <LineBreak/>
                                            [4] print(not weight == 58) <Span Foreground="#272537">___</Span> # False
                                            <LineBreak/>
                                            [5] print(not weight == 57) <Span Foreground="#272537">___</Span> # True
                                        </TextBlock>
                                    </Border>
                                    <LineBreak/>

                                </Paragraph>
                            </Section>



                            <!--написание Оператор "in"-->
                            <Section>
                                <Paragraph>
                                    <LineBreak/>
                                    <Span FontSize="35" FontWeight="Bold">
                                        <Span Foreground="#272537">
                                            ________________________
                                        </Span>
                                        Оператор "in"
                                    </Span>
                                </Paragraph>

                                <Paragraph>
                                    Оператор in возвращает True если в некотором наборе значений есть определенное значение.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Border BorderBrush="Green" BorderThickness="2" Padding="5" Width="300" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] значение in набор_значений
                                        </TextBlock>
                                    </Border>
                                    <LineBreak/>
                                    Например, строка представляет набор символов. И с помощью оператора in мы можем проверить, есть ли в ней какая-нибудь подстрока.

                                    <LineBreak/>
                                    <LineBreak/>
                                    <Span FontSize="20">
                                        <Bold>Пример:</Bold>
                                    </Span>

                                    <LineBreak/>
                                    <Border BorderBrush="Red" BorderThickness="2" Padding="5" Width="700" HorizontalAlignment="Left" CornerRadius="10">
                                        <TextBlock>
                                            [1] message = "hello world!"
                                            <LineBreak/>
                                            [2] hello = "hello"
                                            <LineBreak/>
                                            [3] print(hello in message) <Span Foreground="#272537">___</Span> # True - подстрока hello есть в строке "hello world!"
                                            <LineBreak/>
                                            [4] gold = "gold"
                                            <LineBreak/>
                                            [5] print(gold in message) <Span Foreground="#272537">___</Span> # False - подстроки "gold" нет в строке "hello world!"
                                        </TextBlock>
                                    </Border>
                                    <LineBreak/>
                                    <LineBreak/>
                                    Если нам надо наоборот проверить, нет ли в наборе значений какого-либо значения, то мы може использовать модификацию оператора - not in. 
                                    Она возвращает True, если в наборе значений НЕТ определенного значения!
                                </Paragraph>
                            </Section>
                        </FlowDocument>
                    </RichTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




</ResourceDictionary>